{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rudra\\\\OneDrive\\\\Desktop\\\\Frontend\\\\frontend\\\\src\\\\components\\\\PostCard.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostCard({\n  post\n}) {\n  var _post$author;\n  const excerpt = post.content ? post.content.slice(0, 160) + (post.content.length > 160 ? \"...\" : \"\") : \"\";\n  const cover = post.cover || post.image || null; // backend optional\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-card\",\n    children: [cover ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover\",\n      style: {\n        backgroundImage: `url(${cover})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"kicker\",\n          children: [\"By \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Unknown\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"kicker\",\n          children: new Date(post.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: excerpt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${post._id}`,\n        className: \"read-more\",\n        children: \"Read more \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","PostCard","post","_post$author","excerpt","content","slice","length","cover","image","className","children","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","title","author","username","Date","createdAt","toLocaleDateString","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/Rudra/OneDrive/Desktop/Frontend/frontend/src/components/PostCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function PostCard({ post }) {\r\n  const excerpt = post.content ? post.content.slice(0, 160) + (post.content.length > 160 ? \"...\" : \"\") : \"\";\r\n  const cover = post.cover || post.image || null; // backend optional\r\n  return (\r\n    <article className=\"post-card\">\r\n      {cover ? <div className=\"cover\" style={{ backgroundImage: `url(${cover})` }} /> : null}\r\n      <div className=\"content\">\r\n        <h3>{post.title}</h3>\r\n        <div className=\"meta\">\r\n          <span className=\"kicker\">By {post.author?.username || \"Unknown\"}</span>\r\n          <span>•</span>\r\n          <span className=\"kicker\">{new Date(post.createdAt).toLocaleDateString()}</span>\r\n        </div>\r\n        <p>{excerpt}</p>\r\n        <Link to={`/post/${post._id}`} className=\"read-more\">Read more →</Link>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAA,IAAAC,YAAA;EACzC,MAAMC,OAAO,GAAGF,IAAI,CAACG,OAAO,GAAGH,IAAI,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,IAAI,CAACG,OAAO,CAACE,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE;EACzG,MAAMC,KAAK,GAAGN,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACO,KAAK,IAAI,IAAI,CAAC,CAAC;EAChD,oBACET,OAAA;IAASU,SAAS,EAAC,WAAW;IAAAC,QAAA,GAC3BH,KAAK,gBAAGR,OAAA;MAAKU,SAAS,EAAC,OAAO;MAACE,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOL,KAAK;MAAI;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,eACtFjB,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBX,OAAA;QAAAW,QAAA,EAAKT,IAAI,CAACgB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBX,OAAA;UAAMU,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,KAAG,EAAC,EAAAR,YAAA,GAAAD,IAAI,CAACiB,MAAM,cAAAhB,YAAA,uBAAXA,YAAA,CAAaiB,QAAQ,KAAI,SAAS;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvEjB,OAAA;UAAAW,QAAA,EAAM;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACdjB,OAAA;UAAMU,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAE,IAAIU,IAAI,CAACnB,IAAI,CAACoB,SAAS,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACNjB,OAAA;QAAAW,QAAA,EAAIP;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBjB,OAAA,CAACF,IAAI;QAAC0B,EAAE,EAAE,SAAStB,IAAI,CAACuB,GAAG,EAAG;QAACf,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACS,EAAA,GAlBuBzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}